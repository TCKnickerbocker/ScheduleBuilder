doctype html
head
  meta(charset='utf-8')
  meta(name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no')
  link(rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css' integrity='sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO' crossorigin='anonymous')
  script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js' integrity='sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49' crossorigin='anonymous')
  script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js' integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy' crossorigin='anonymous')
  link(rel='stylesheet' href='./client/css/schedule.css')
  style.
    #logoutImg{width:35px;}
  title My Schedule
nav.navbar.navbar-expanded.navbar-light.bg-light.mb-5
  ul.nav.nav-pills
    li.nav-item
      a.nav-link(href='/') Home
    li.nav-item.active
      a.nav-link.active(href='/schedule') My Schedule
    li.nav-item
      a.nav-link(href='/addEvent')
        | Add
        | Event
    li.nav-item
      a.nav-link(href='/uploadSchedule') Upload Schedule
    li.nav-item
      a.nav-link(href='/stocks') Stocks
    li.nav-item
      a.nav-link(href='/login' onclick='logout()')
        img#logoutImg(src='./client/images/logOut.png' alt='Log out')
.container.mb-5
  .alert.alert-secondary(role='alert')
    | Click on a day to see its events
.container.mb-3
  ul#days.nav.nav-tabs.nav-fill
    li.nav-item
      a.nav-link(onclick='formTable(this)') Sunday
    li.nav-item
      a.nav-link(onclick='formTable(this)') Monday
    li.nav-item
      a.nav-link(onclick='formTable(this)') Tuesday
    li.nav-item
      a.nav-link(onclick='formTable(this)') Wednesday
    li.nav-item
      a.nav-link(onclick='formTable(this)') Thursday
    li.nav-item
      a.nav-link(onclick='formTable(this)') Friday
    li.nav-item
      a.nav-link(onclick='formTable(this)') Saturday
  br
  br
  .container
    table#scheduleTable.table.table-striped
      thead
        tr
          th(scope='col') Name
          th(scope='col') Time
          th(scope='col') Location
          th(scope='col') Phone
          th(scope='col') Extra Information
      tbody
script.
  function formTable(element) {
  $('#days li a').removeClass("active");
  $(element).addClass("active");
  clearTable();
  let day = $(element).text().toLowerCase();
  console.log(day);
  fetch('/getSchedule?day=' + day)
  .then(response => {
  console.log("Response:");
  console.log(response);
  return response.json();
  })
  .then(data => {
  data.forEach(event => {
  let table = $("#scheduleTable");
  console.log(event.event_end);
  console.log(event.event_end);
  let startTime = getFormattedTime(event.event_start);
  let endTime = getFormattedTime(event.event_end);
  let row = "<tr id='" + event.event_id 
  + "'><td>" + event.event_event + "</td><td>" + startTime + " - " + endTime + "</td><td>" + event.event_location + 
  "</td><td>" + event.event_phone + "</td><td>" + event.event_info + "<br>" + event.event_url 
  + "<div class='hiddenLinks'><a href='#' type='button' class='delete' onClick='deleteRow(" + event.event_id 
  + ")'>Delete</a>" + "<a href = '/edit/" + event.event_id + "' type='button' class='edit'>Edit</a></div></td></tr>";
  table.append(row);
  });
  })
  .catch(error => console.error(error));
  }
  function deleteRow(id) {
  if (confirm("Are you sure you want to delete this event?")) {
  fetch(`/deleteEvent/${id}`)
  .then(response => {
  if (response.status === 200) {
  console.log("Successfully deleted row: " + id);
  document.getElementById(`${id}`).remove();
  } else {
  console.log("Row " + `${id}` + " not deleted");
  }
  })
  }
  }
  function clearTable() {
  $('#scheduleTable tbody').empty();
  }
  function getFormattedTime(militaryTimeStr) {
  const hr = parseInt(militaryTimeStr.slice(0, 2));
  const min = militaryTimeStr.slice(3, 5);
  const amPM = hr >= 12 ? 'pm' : 'am';
  const formattedHr = hr > 12 ? hr - 12 : hr;
  const formattedMin = min.padStart(2, '0'); // Ensure minutes are two digits
  const formattedTime = `${formattedHr}:${formattedMin} ${amPM}`;
  return formattedTime;
  }
  function logout(){
  console.log("Logging out")
  fetch("/logout");
  }
  $(document).ready(function() { // check if user is logged in. If not, redirect
  console.log("Checking login status");
  fetch('/checkLogin')
  .then(response => {
  console.log(response.status);
  if (response.status != 200) {
  window.location.href = "/login";
  }
  });
  });
